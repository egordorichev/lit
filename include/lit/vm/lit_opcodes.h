OPCODE(MOVE, "MOVE", LIT_INSTRUCTION_ABC) // R(A) := R(B)
OPCODE(LOADK, "LOADK", LIT_INSTRUCTION_ABX) // R(A) := C(Bx)
OPCODE(LOADNULL, "LOADNULL", LIT_INSTRUCTION_ABC) // R(A) := null
OPCODE(LOADBOOL, "LOADBOOL", LIT_INSTRUCTION_ABC) // R(A) := (bool) B

OPCODE(RETURN, "RETURN", LIT_INSTRUCTION_ABC) // return R(A), ..., R(A + B - 2)

OPCODE(ADD, "ADD", LIT_INSTRUCTION_ABC) // R(A) := RC(B) + RC(C)
OPCODE(SUBTRACT, "SUBTRACT", LIT_INSTRUCTION_ABC) // R(A) := RC(B) - RC(C)
OPCODE(MULTIPLY, "MULTIPLY", LIT_INSTRUCTION_ABC) // R(A) := RC(B) * RC(C)
OPCODE(DIVIDE, "DIVIDE", LIT_INSTRUCTION_ABC) // R(A) := RC(B) / RC(C)

OPCODE(NEGATE, "NEGATE", LIT_INSTRUCTION_ABC) // R(A) := -RC(B)
OPCODE(NOT, "NOT", LIT_INSTRUCTION_ABC) // R(A) := !RC(B)