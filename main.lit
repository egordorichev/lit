class Awesome {
	constructor(a) {
		this.prop = a
	}

	test() {
		return this.prop
	}
}

print(Awesome) // Expected: class Awesome
var a = new Awesome("good")

print(a) // Expected: Awesome instance

print(a.prop) // Expected: good
print(a.test()) // Expected: good

a.prop = "awesome"

print(a.test()) // Expected: awesome

class Best : Awesome {
	constructor() {
		super("good")
	}

	printTest() {
		print(this.test())
	}

	test() {
		this.prop = "bad"
		return super.test()
	}

	getTest() {
		return super.test
	}

	z => 32

	d {
		get {
			return this.prop
		}

		set => this.prop = value
	}
}

var b = new Best()
b.printTest() // Expected: bad
var z = b.getTest()
print(z()) // Expected: bad